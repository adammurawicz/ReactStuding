{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Windows 10\\\\Desktop\\\\projekty\\\\ReactLearning\\\\SchwarcCompleteGuideApp1\\\\src\\\\components\\\\Expenses\\\\ExpensesChart.jsx\";\nimport Chart from '../Chart/Chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ExpensesChart = props => {\n  const chartDataPoints = [{\n    label: 'Jan',\n    value: 0\n  }, {\n    label: 'Fab',\n    value: 0\n  }, {\n    label: 'March',\n    value: 0\n  }, {\n    label: 'April',\n    value: 0\n  }, {\n    label: 'May',\n    value: 0\n  }, {\n    label: 'Jun',\n    value: 0\n  }, {\n    label: 'Jul',\n    value: 0\n  }, {\n    label: 'Aug',\n    value: 0\n  }, {\n    label: 'Sep',\n    value: 0\n  }, {\n    label: 'Oct',\n    value: 0\n  }, {\n    label: 'Nov',\n    value: 0\n  }, {\n    label: 'Dec',\n    value: 0\n  }];\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    dataPoints: chartDataPoints\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 12\n  }, this);\n};\n_c = ExpensesChart;\nvar _c;\n$RefreshReg$(_c, \"ExpensesChart\");","map":{"version":3,"names":["Chart","jsxDEV","_jsxDEV","ExpensesChart","props","chartDataPoints","label","value","expense","expenses","expenseMonth","date","getMonth","amount","dataPoints","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Windows 10/Desktop/projekty/ReactLearning/SchwarcCompleteGuideApp1/src/components/Expenses/ExpensesChart.jsx"],"sourcesContent":["import Chart from '../Chart/Chart'\r\n\r\nexport const ExpensesChart = (props) => {\r\n\r\n    const chartDataPoints = [\r\n        {label: 'Jan', value: 0},\r\n        {label: 'Fab', value: 0},\r\n        {label: 'March', value: 0},\r\n        {label: 'April', value: 0},\r\n        {label: 'May', value: 0},\r\n        {label: 'Jun', value: 0},\r\n        {label: 'Jul', value: 0},\r\n        {label: 'Aug', value: 0},\r\n        {label: 'Sep', value: 0},\r\n        {label: 'Oct', value: 0},\r\n        {label: 'Nov', value: 0},\r\n        {label: 'Dec', value: 0},\r\n    ]\r\n\r\n    for (const expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth()\r\n        chartDataPoints[expenseMonth].value += expense.amount\r\n    }\r\n\r\n    return <Chart dataPoints={chartDataPoints}/>\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,OAAO,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAEpC,MAAMC,eAAe,GAAG,CACpB;IAACC,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,EACxB;IAACD,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,EACxB;IAACD,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAC,CAAC,EAC1B;IAACD,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAC,CAAC,EAC1B;IAACD,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,EACxB;IAACD,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,EACxB;IAACD,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,EACxB;IAACD,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,EACxB;IAACD,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,EACxB;IAACD,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,EACxB;IAACD,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,EACxB;IAACD,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,CAC3B;EAED,KAAK,MAAMC,OAAO,IAAIJ,KAAK,CAACK,QAAQ,EAAE;IAClC,MAAMC,YAAY,GAAGF,OAAO,CAACG,IAAI,CAACC,QAAQ,CAAC,CAAC;IAC5CP,eAAe,CAACK,YAAY,CAAC,CAACH,KAAK,IAAIC,OAAO,CAACK,MAAM;EACzD;EAEA,oBAAOX,OAAA,CAACF,KAAK;IAACc,UAAU,EAAET;EAAgB;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAChD,CAAC;AAAAC,EAAA,GAvBYhB,aAAa;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}